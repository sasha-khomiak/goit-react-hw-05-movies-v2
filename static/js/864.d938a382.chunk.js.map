{"version":3,"file":"static/js/864.d938a382.chunk.js","mappings":"wUAEaA,EAAKC,EAAAA,GAAAA,GAAH,gHAQFC,EAAKD,EAAAA,GAAAA,GAAH,yCAIFE,EAAMF,EAAAA,GAAAA,IAAH,kGAOHG,EAAQH,EAAAA,GAAAA,IAAH,0D,SCyClB,EAhDa,WACX,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAoCF,EAAAA,EAAAA,WAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACRD,GAAc,IACdE,EAAAA,EAAAA,IAAwBR,GACrBS,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACa,IAArBA,EAAKP,KAAKU,QAGdT,EAAQM,EAAKP,KACd,IACAW,SAAQ,kBAAMR,GAAc,EAApB,GACZ,GAAE,CAACN,KAGF,2BACGK,IAAc,SAACU,EAAA,EAAD,KACbZ,IAAQ,uBAAG,qBACZA,IACC,SAACR,EAAD,UACGQ,EAAKa,KAAI,SAAAC,GACR,IAAIC,EAAaC,EAIjB,OAHIF,EAAMG,eACRF,EAAU,yCAAqCD,EAAMG,gBAGrD,UAACvB,EAAD,YACE,SAACE,EAAD,WACE,SAACD,EAAD,CAAKuB,OAAQH,EAAYI,IAAKL,EAAMM,UAEtC,0BACE,uBAAIN,EAAMM,WALLN,EAAMO,GASlB,QAKV,C,4FCxDYC,EAAa7B,EAAAA,GAAAA,IAAH,uEAMV8B,EAAgB9B,EAAAA,GAAAA,IAAH,6D,mBCFpB+B,EAAaC,SAASC,cAAc,gBAwB1C,EAtBe,WACb,OAAOC,EAAAA,EAAAA,eACL,SAACL,EAAD,WACE,SAACC,EAAD,WACE,SAAC,KAAD,CACEK,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,yBACVC,iBAAiB,GACjBC,iBAAiB,GACjBC,kBAAkB,SAIxBb,EAEH,C,wJC3BD,IAAMc,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAGAC,EAAW,gCASV,SAASC,IACd,IAAMC,EAAG,UAAMF,EAAN,iBACT,OAAOG,MAAMD,EAAKP,GAAShC,MAAK,SAAAyC,GAAQ,OAAIA,EAASC,MAAb,GACzC,CAGM,SAASC,EAAoBC,GAClC,IAAML,EAAG,UAAMF,EAAN,iBAAuBO,GAChC,OAAOJ,MAAMD,EAAKP,GAAShC,MAAK,SAAAyC,GAAQ,OAAIA,EAASC,MAAb,GACzC,CAGM,SAASG,EAAwBC,GACtC,IAAMP,EAAG,UAAMF,EAAN,8BAAoCS,EAApC,8CACT,OAAON,MAAMD,EAAKP,GAAShC,MAAK,SAAAyC,GAAQ,OAAIA,EAASC,MAAb,GACzC,CAGM,SAAS3C,EAAwB6C,GACtC,IAAML,EAAG,UAAMF,EAAN,iBAAuBO,EAAvB,YACT,OAAOJ,MAAMD,EAAKP,GAAShC,MAAK,SAAAyC,GAAQ,OAAIA,EAASC,MAAb,GACzC,CAGM,SAASK,EAA2BH,GACzC,IAAML,EAAG,UAAMF,EAAN,iBAAuBO,EAAvB,YACT,OAAOJ,MAAMD,EAAKP,GAAShC,MAAK,SAAAyC,GAAQ,OAAIA,EAASC,MAAb,GACzC,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","servises/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const Li = styled.li`\n  width: 186px;\n`;\n\nexport const Img = styled.img`\n  display: block;\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const Thumb = styled.div`\n  height: 285px;\n  width: 100%;\n`;\n","import React from 'react';\n// import PropTypes from 'prop-types'\n\nimport { useParams } from 'react-router-dom';\n\nimport { useState, useEffect } from 'react';\n\nimport { getMovieCastByIdFromApi } from '../../servises/api';\n\nimport NoActorPhoto from '../../images/no-photo-actor.png';\nimport Loader from 'components/Loader/Loader';\n\nimport { Ul, Li, Img, Thumb } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const [showLoader, setShowLoader] = useState(false);\n\n  useEffect(() => {\n    setShowLoader(true);\n    getMovieCastByIdFromApi(movieId)\n      .then(data => {\n        console.log(data);\n        if (data.cast.length === 0) {\n          return;\n        }\n        setCast(data.cast);\n      })\n      .finally(() => setShowLoader(false));\n  }, [movieId]);\n\n  return (\n    <div>\n      {showLoader && <Loader />}\n      {!cast && <p>there is no cast</p>}\n      {cast && (\n        <Ul>\n          {cast.map(actor => {\n            let actorPhoto = NoActorPhoto;\n            if (actor.profile_path) {\n              actorPhoto = `https://image.tmdb.org/t/p/w500${actor.profile_path}`;\n            }\n            return (\n              <Li key={actor.id}>\n                <Thumb>\n                  <Img srcSet={actorPhoto} alt={actor.name}></Img>\n                </Thumb>\n                <div>\n                  <p>{actor.name}</p>\n                </div>\n              </Li>\n            );\n          })}\n        </Ul>\n      )}\n    </div>\n  );\n};\n\n// Cast.propTypes = {}\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n`;\n\nexport const SttyledLoader = styled.div`\n  transform: translate(-50%, -50%);\n`;\n","import { ThreeCircles } from 'react-loader-spinner';\n\nimport { LoaderWrap, SttyledLoader } from './Loader.styled';\n\nimport { createPortal } from 'react-dom';\n\nconst loaderRoot = document.querySelector('#loader-root');\n\nconst Loader = () => {\n  return createPortal(\n    <LoaderWrap>\n      <SttyledLoader>\n        <ThreeCircles\n          height=\"200\"\n          width=\"200\"\n          color=\"#FF0000\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n          ariaLabel=\"three-circles-rotating\"\n          outerCircleColor=\"\"\n          innerCircleColor=\"\"\n          middleCircleColor=\"\"\n        />\n      </SttyledLoader>\n    </LoaderWrap>,\n    loaderRoot\n  );\n};\n\nexport default Loader;\n","//settings\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmMDUxYWM1MGQzYmZlMGMzZmQ3NWYwMmMxZmY3YjY4OCIsInN1YiI6IjY0MzU2NTAxZTYzNTcxMDExMTBlNjg0NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.iFa5GXSVBy7mOGv4-c6hZa7SvnNn7rZ6QbJ22iF5bgM',\n  },\n};\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n// // 1\n// export function getPopularMoviesFromApi() {\n//   const URL = `${BASE_URL}trending/all/day?language=en-US`;\n//   return fetch(URL, options).then(response => response.json());\n// }\n\n// 1\nexport function getPopularMoviesFromApi() {\n  const URL = `${BASE_URL}movie/popular`;\n  return fetch(URL, options).then(response => response.json());\n}\n\n// 2\nexport function getMovieByIdFromApi(movie_id) {\n  const URL = `${BASE_URL}movie/${movie_id}`;\n  return fetch(URL, options).then(response => response.json());\n}\n\n// 3\nexport function getMoviesByQueryFromApi(query) {\n  const URL = `${BASE_URL}search/movie?query=${query}&include_adult=false&language=en-US&page=1`;\n  return fetch(URL, options).then(response => response.json());\n}\n\n// 4\nexport function getMovieCastByIdFromApi(movie_id) {\n  const URL = `${BASE_URL}movie/${movie_id}/credits`;\n  return fetch(URL, options).then(response => response.json());\n}\n\n// 5\nexport function getMovieReviewsByIdFromApi(movie_id) {\n  const URL = `${BASE_URL}movie/${movie_id}/reviews`;\n  return fetch(URL, options).then(response => response.json());\n}\n"],"names":["Ul","styled","Li","Img","Thumb","movieId","useParams","useState","cast","setCast","showLoader","setShowLoader","useEffect","getMovieCastByIdFromApi","then","data","console","log","length","finally","Loader","map","actor","actorPhoto","NoActorPhoto","profile_path","srcSet","alt","name","id","LoaderWrap","SttyledLoader","loaderRoot","document","querySelector","createPortal","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","options","method","headers","accept","Authorization","BASE_URL","getPopularMoviesFromApi","URL","fetch","response","json","getMovieByIdFromApi","movie_id","getMoviesByQueryFromApi","query","getMovieReviewsByIdFromApi"],"sourceRoot":""}