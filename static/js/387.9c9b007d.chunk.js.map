{"version":3,"file":"static/js/387.9c9b007d.chunk.js","mappings":"kNAEaA,EAAaC,EAAAA,GAAAA,IAAH,uEAMVC,EAAgBD,EAAAA,GAAAA,IAAH,6D,mBCFpBE,EAAaC,SAASC,cAAc,gBAwB1C,EAtBe,WACb,OAAOC,EAAAA,EAAAA,eACL,SAACN,EAAD,WACE,SAACE,EAAD,WACE,SAAC,KAAD,CACEK,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,yBACVC,iBAAiB,GACjBC,iBAAiB,GACjBC,kBAAkB,SAIxBb,EAEH,C,2HC1BYc,E,QAAKhB,GAAAA,GAAH,sH,mBCgDf,EAxCgB,WACd,IAAQiB,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAoCF,EAAAA,EAAAA,WAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACRD,GAAc,IACdE,EAAAA,EAAAA,IAA2BR,GACxBS,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACgB,IAAxBA,EAAKG,QAAQC,QAGjBV,EAAWM,EAAKG,QACjB,IACAE,SAAQ,kBAAMT,GAAc,EAApB,GACZ,GAAE,CAACN,KAGF,2BACGK,IAAc,SAACW,EAAA,EAAD,KACbb,IAAW,uBAAG,wBACfA,IACC,SAACJ,EAAD,UACGI,EAAQc,KAAI,SAAAC,GACX,OACE,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,QAKV,C,wJC7CD,IAAMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAGAC,EAAW,gCASV,SAASC,IACd,IAAMC,EAAG,UAAMF,EAAN,iBACT,OAAOG,MAAMD,EAAKP,GAASb,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,MAAb,GACzC,CAGM,SAASC,EAAoBC,GAClC,IAAML,EAAG,UAAMF,EAAN,iBAAuBO,GAChC,OAAOJ,MAAMD,EAAKP,GAASb,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,MAAb,GACzC,CAGM,SAASG,EAAwBC,GACtC,IAAMP,EAAG,UAAMF,EAAN,8BAAoCS,EAApC,8CACT,OAAON,MAAMD,EAAKP,GAASb,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,MAAb,GACzC,CAGM,SAASK,EAAwBH,GACtC,IAAML,EAAG,UAAMF,EAAN,iBAAuBO,EAAvB,YACT,OAAOJ,MAAMD,EAAKP,GAASb,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,MAAb,GACzC,CAGM,SAASxB,EAA2B0B,GACzC,IAAML,EAAG,UAAMF,EAAN,iBAAuBO,EAAvB,YACT,OAAOJ,MAAMD,EAAKP,GAASb,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,MAAb,GACzC,C","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","servises/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n`;\n\nexport const SttyledLoader = styled.div`\n  transform: translate(-50%, -50%);\n`;\n","import { ThreeCircles } from 'react-loader-spinner';\n\nimport { LoaderWrap, SttyledLoader } from './Loader.styled';\n\nimport { createPortal } from 'react-dom';\n\nconst loaderRoot = document.querySelector('#loader-root');\n\nconst Loader = () => {\n  return createPortal(\n    <LoaderWrap>\n      <SttyledLoader>\n        <ThreeCircles\n          height=\"200\"\n          width=\"200\"\n          color=\"#FF0000\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n          ariaLabel=\"three-circles-rotating\"\n          outerCircleColor=\"\"\n          innerCircleColor=\"\"\n          middleCircleColor=\"\"\n        />\n      </SttyledLoader>\n    </LoaderWrap>,\n    loaderRoot\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  list-style: none;\n  padding: 0;\n  /* display: flex;\n  flex-wrap: wrap; */\n  gap: 10px;\n`;\n","import React from 'react';\n// import PropTypes from 'prop-types'\nimport { useParams } from 'react-router-dom';\n\nimport { useState, useEffect } from 'react';\n\nimport { getMovieReviewsByIdFromApi } from '../../servises/api';\n\nimport { Ul } from './Reviews.styled';\nimport Loader from 'components/Loader/Loader';\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [showLoader, setShowLoader] = useState(false);\n\n  useEffect(() => {\n    setShowLoader(true);\n    getMovieReviewsByIdFromApi(movieId)\n      .then(data => {\n        console.log(data);\n        if (data.results.length === 0) {\n          return;\n        }\n        setReviews(data.results);\n      })\n      .finally(() => setShowLoader(false));\n  }, [movieId]);\n\n  return (\n    <div>\n      {showLoader && <Loader />}\n      {!reviews && <p>there is no reviews</p>}\n      {reviews && (\n        <Ul>\n          {reviews.map(review => {\n            return (\n              <li key={review.id}>\n                <h5>{review.author}</h5>\n                <p>{review.content}</p>\n              </li>\n            );\n          })}\n        </Ul>\n      )}\n    </div>\n  );\n};\n\n// Reviews.propTypes = {}\n\nexport default Reviews;\n","//settings\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmMDUxYWM1MGQzYmZlMGMzZmQ3NWYwMmMxZmY3YjY4OCIsInN1YiI6IjY0MzU2NTAxZTYzNTcxMDExMTBlNjg0NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.iFa5GXSVBy7mOGv4-c6hZa7SvnNn7rZ6QbJ22iF5bgM',\n  },\n};\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n// // 1\n// export function getPopularMoviesFromApi() {\n//   const URL = `${BASE_URL}trending/all/day?language=en-US`;\n//   return fetch(URL, options).then(response => response.json());\n// }\n\n// 1\nexport function getPopularMoviesFromApi() {\n  const URL = `${BASE_URL}movie/popular`;\n  return fetch(URL, options).then(response => response.json());\n}\n\n// 2\nexport function getMovieByIdFromApi(movie_id) {\n  const URL = `${BASE_URL}movie/${movie_id}`;\n  return fetch(URL, options).then(response => response.json());\n}\n\n// 3\nexport function getMoviesByQueryFromApi(query) {\n  const URL = `${BASE_URL}search/movie?query=${query}&include_adult=false&language=en-US&page=1`;\n  return fetch(URL, options).then(response => response.json());\n}\n\n// 4\nexport function getMovieCastByIdFromApi(movie_id) {\n  const URL = `${BASE_URL}movie/${movie_id}/credits`;\n  return fetch(URL, options).then(response => response.json());\n}\n\n// 5\nexport function getMovieReviewsByIdFromApi(movie_id) {\n  const URL = `${BASE_URL}movie/${movie_id}/reviews`;\n  return fetch(URL, options).then(response => response.json());\n}\n"],"names":["LoaderWrap","styled","SttyledLoader","loaderRoot","document","querySelector","createPortal","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","Ul","movieId","useParams","useState","reviews","setReviews","showLoader","setShowLoader","useEffect","getMovieReviewsByIdFromApi","then","data","console","log","results","length","finally","Loader","map","review","author","content","id","options","method","headers","accept","Authorization","BASE_URL","getPopularMoviesFromApi","URL","fetch","response","json","getMovieByIdFromApi","movie_id","getMoviesByQueryFromApi","query","getMovieCastByIdFromApi"],"sourceRoot":""}